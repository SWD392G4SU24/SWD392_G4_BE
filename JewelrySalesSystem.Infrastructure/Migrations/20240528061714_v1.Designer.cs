// <auto-generated />
using System;
using JewelrySalesSystem.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JewelrySalesSystem.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240528061714_v1")]
    partial class v1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("JewelrySalesSystem.Domain.Entities.Configured.PhanLoaiEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayXoa")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiCapNhatID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTaoID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiXoaID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("PhanLoai");
                });

            modelBuilder.Entity("JewelrySalesSystem.Domain.Entities.Configured.RoleEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayXoa")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiCapNhatID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTaoID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiXoaID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("JewelrySalesSystem.Domain.Entities.KhuyenMaiEntity", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DiemDoiThuong")
                        .HasColumnType("int");

                    b.Property<decimal>("DieuKienSuDung")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GiamToiDa")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("NgayCapNhatCuoi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayXoa")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiCapNhatID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTaoID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiXoaID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PhanTramGiam")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.ToTable("KhuyenMai");
                });

            modelBuilder.Entity("JewelrySalesSystem.Domain.Entities.SanPhamEntity", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("GiaSanPham")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayCapNhatCuoi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayXoa")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiCapNhatID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTaoID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiXoaID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhanLoaiID")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<float>("TrongLuong")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.HasIndex("PhanLoaiID");

                    b.ToTable("SanPham");
                });

            modelBuilder.Entity("JewelrySalesSystem.Domain.Entities.UsersEntity", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DiemThuong")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HoVaTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayCapNhatCuoi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayXoa")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiCapNhatID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTaoID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiXoaID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RoleID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("KhuyenMaiEntityPhanLoaiEntity", b =>
                {
                    b.Property<string>("KhuyenMaisID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PhanLoaisID")
                        .HasColumnType("int");

                    b.HasKey("KhuyenMaisID", "PhanLoaisID");

                    b.HasIndex("PhanLoaisID");

                    b.ToTable("KhuyenMaiEntityPhanLoaiEntity");
                });

            modelBuilder.Entity("KhuyenMaiEntityUsersEntity", b =>
                {
                    b.Property<string>("KhuyenMaisID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UsersID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("KhuyenMaisID", "UsersID");

                    b.HasIndex("UsersID");

                    b.ToTable("KhuyenMaiEntityUsersEntity");
                });

            modelBuilder.Entity("JewelrySalesSystem.Domain.Entities.SanPhamEntity", b =>
                {
                    b.HasOne("JewelrySalesSystem.Domain.Entities.Configured.PhanLoaiEntity", "PhanLoai")
                        .WithMany("SanPhams")
                        .HasForeignKey("PhanLoaiID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PhanLoai");
                });

            modelBuilder.Entity("JewelrySalesSystem.Domain.Entities.UsersEntity", b =>
                {
                    b.HasOne("JewelrySalesSystem.Domain.Entities.Configured.RoleEntity", "Role")
                        .WithMany()
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("KhuyenMaiEntityPhanLoaiEntity", b =>
                {
                    b.HasOne("JewelrySalesSystem.Domain.Entities.KhuyenMaiEntity", null)
                        .WithMany()
                        .HasForeignKey("KhuyenMaisID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JewelrySalesSystem.Domain.Entities.Configured.PhanLoaiEntity", null)
                        .WithMany()
                        .HasForeignKey("PhanLoaisID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KhuyenMaiEntityUsersEntity", b =>
                {
                    b.HasOne("JewelrySalesSystem.Domain.Entities.KhuyenMaiEntity", null)
                        .WithMany()
                        .HasForeignKey("KhuyenMaisID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JewelrySalesSystem.Domain.Entities.UsersEntity", null)
                        .WithMany()
                        .HasForeignKey("UsersID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JewelrySalesSystem.Domain.Entities.Configured.PhanLoaiEntity", b =>
                {
                    b.Navigation("SanPhams");
                });
#pragma warning restore 612, 618
        }
    }
}
